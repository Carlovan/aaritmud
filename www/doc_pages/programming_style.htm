<html>
<head>
<link rel="Shortcut Icon" type="image/x-icon" href="favicon.ico">
<link rel="Stylesheet" type="text/css" href="style.css">
<title>Documentazione di Aarit, il Mud in Python</title>
</head>
<body>

<hr>
<h3>Stile di programmazione aaritiano:</h3>
<div class="main">
Lo stile di programmazione aaritiano si basa su:<br>
<a href="http://www.python.org/dev/peps/pep-0008/">http://www.python.org/dev/peps/pep-0008/</a><br>
con alcune differenze o aggiunte (TD)<br><br>

Lo zen di Aarit:<br>
1) Analizza il problema, spezzalo in piccoli atomi di problemi e risolvili uno per volta. (es: prima carichi tutti i dati dai file così come sono, poi li controlli, non cercare di fare tutte e due le cose)<br>
2) Nella parte di codice che dai per scontato che funzioni, o che non hai compreso bene, vi si trova, la maggior parte delle volte, il baco che stai cercando.<br>
3) Se un pezzo di codice lo ripeti in maniera simile almeno 3 volte sarebbe buona cosa cercare di creare una funzione che lo contenga<br>
4) Quando scrivi codice la tua prima preoccupazione deve essere la semplicità e la leggibilità. La seconda la potenza che vuoi implementare nel codice.<br>
Come terza la velocità di esecuzione di cui hai bisogno.<br>
- semplice, seguendo la filosofia <a href="http://it.wikipedia.org/wiki/KISS_(informatica)">KISS</a>.<br>
- potente nel senso di funzionalità e flessibilità, non di velocità<br>
- veloce solo quanto veramente ti serve, fare profiling<br>
5) Prima fai funzionare il codice, poi ottimizzalo.<br>
6) I Gamescript servono ad gestire situazioni particolari che le informazioni delle varie entità non possiedono, difatti il design delle entità è alleggerito in maniera tale che l'area building sia veloce, tutto il resto è gestibile via gamescripts.<br>
7) Mai utilizzare le espressioni regolari senza veramente un ottimo motivo.<br>
</div><br>

<hr>
</body>
</html>
